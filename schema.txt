SWAP
----
1 -> 2 -> 3 -> 4 -> 5 
tmp = 2
1.nxt=tmp.nxt
1 -> 3 -> 4 -> 5
tmp.nxt=start
start=tmp
2 -> 1 -> 3 -> 4 -> 5
---------------------

ROTATE
------
1 -> 2 -> 3 -> 4 -> 5
tmp=start
start=start.nxt
2 -> 3 -> 4 -> 5
tmp.nxt=NULL
lst_addback(start, tmp)

R_ROTATE
--------
1 -> 2 -> 3 -> 4 -> 5 -> NULL
tmp=start
start=lstlast
start : 5 -> NULL || tmp : 1 -> 2 -> 3 -> 4 -> 5 -> NULL
start.nxt=tmp
start : 5 -> 1 -> 2 -> 3 -> 4 -> 5 -> NULL
while tmp->next : tmp=tmp->next; tmp = NULL
5 -> 1 -> 2 -> 3 -> 4 -> NULL

---------------------------------------------------------------
SORTING
---------------------------------------------------------------
--------------
| SORT_THREE |
--------------

------------
1 -> 2 -> 3
------------
ok

------------
1 -> 3 -> 2
------------
sa
3 -> 1 -> 2
ra
1 -> 2 -> 3
ok

------------
2 -> 3 -> 1
------------
rra
1 -> 2 -> 3
ok

------------
2 -> 1 -> 3
------------
sa
1 -> 2 -> 3
ok

------------
3 -> 2 -> 1
------------
ra
2 -> 1 -> 3
sa
1 -> 2 -> 3
ok

------------
3 -> 1 -> 2 
------------
rra
1 -> 2 -> 3

--------------
| SORT_FIVE |
--------------
a - on push_b les 2 plus petits [4 + 2 coups]
b - on invert sort_two dans b [1 coup]
c - on sort_three dans a [2 coups]
d - on push_a [2 coups]


